-= Desired features =-
- Consider: anticipate the possible next states (10 of them or so, which can be calculated in parallel), then display whichever is relevant
- ITakeables have some sort of "GetId()" method. In Has method, compare by Id, not Color. 
- Research faster console writing:
	* https://stackoverflow.com/questions/29920056/c-sharp-something-faster-than-console-write
	* https://stackoverflow.com/questions/2754518/how-can-i-write-fast-colored-output-to-console
- Level editor
- Status bar
- Implement and test "seek" behavior for bullet
- Enemies: archers, poodles
- Hippo and goal
- Trophies and transporters
- Gravity; player dies if gravity > 0 and reaches bottom row, or gravity < 0 and reaches top row
- Torches and darkness
- Gems
- Lives
- Scrolls
- Message text
- Custom programmable objects (support a superset of ZZT-OOP)
- Objects can send each other messages and react accordingly.
- Music / sound effects
- Saved games
- Cheat codes
- Converter to convert ZZT worlds (including ZZT-OOP) to Herc and Hippo worlds???
- Look into Unity or MAUI for creating non-ASCII interface and mobile version

* Desire an IsBlocked method that checks if player (or other ILocatable) is blocked in a given direction. 
   - Could use a default implementation in the interface, perhaps.
   - Intuitively, checks if moving the object in a direction results in a changed location (if so, not blocked)
   - That should be easy to implement for Player, but for other objects we need a system for inter-object communication
   - That system might involve the HercAndHippoObj superclass

  -=Unit Test=-
  If player moves for a while in a direction, player never hinders its own motion